<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>KnightMoves.Hierarchical Namespace</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="KnightMoves.Hierarchical namespace" />
    <meta name="Microsoft.Help.F1" content="KnightMoves.Hierarchical" />
    <meta name="Microsoft.Help.Id" content="N:KnightMoves.Hierarchical" />
    <meta name="Description" content="This library is implements an abstraction of Tree Node functionality." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="KnightMoves.Hierarchical" />
    <meta name="file" content="a3fd85d0-83a9-c754-cf3b-fb566147ef3d" />
    <meta name="guid" content="a3fd85d0-83a9-c754-cf3b-fb566147ef3d" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">KnightMoves.Hierarchical Help Doc<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm" title="KnightMoves.Hierarchical Help Doc" tocid="roottoc">KnightMoves.Hierarchical Help Doc</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm" title="KnightMoves.Hierarchical" tocid="a3fd85d0-83a9-c754-cf3b-fb566147ef3d">KnightMoves.Hierarchical</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ea51172a-30f4-05f8-5c96-970bf74de3af.htm" title="ITreeNode(T) Interface" tocid="ea51172a-30f4-05f8-5c96-970bf74de3af">ITreeNode(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="6fc009e8-03e6-d212-95d2-316e50f37fb3.htm" title="ITreeNodeProcessor(T) Interface" tocid="6fc009e8-03e6-d212-95d2-316e50f37fb3">ITreeNodeProcessor(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ab629f53-8357-6e62-161e-f9a801215cdc.htm" title="TreeList(T) Class" tocid="ab629f53-8357-6e62-161e-f9a801215cdc">TreeList(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ead54978-f016-d799-c481-594b114fa4cd.htm" title="TreeNode(T) Class" tocid="ead54978-f016-d799-c481-594b114fa4cd">TreeNode(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="4371adca-b895-8c20-8952-ccc819c0da57.htm" title="TreeNodeWpfViewModel(T) Class" tocid="4371adca-b895-8c20-8952-ccc819c0da57">TreeNodeWpfViewModel(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="9a4fd3fb-9f00-6398-0694-72490f82c586.htm" title="TreeNodeWrapper(T) Class" tocid="9a4fd3fb-9f00-6398-0694-72490f82c586">TreeNodeWrapper(T) Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">KnightMoves.Hierarchical Namespace</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">This library is implements an abstraction of Tree Node functionality.</div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0">
            <img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span>
        </div>
        <div id="ID0RBSection" class="collapsibleSection">
          <table id="typeList" class="members">
            <tr>
              <th class="iconColumn">
					 
				</th>
              <th>Class</th>
              <th>Description</th>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="ab629f53-8357-6e62-161e-f9a801215cdc.htm">TreeList<span id="LST180F90F6_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
             This class inherits from ObservableCollection&lt;&gt; and overrides the Add() method. This custom 
             collection was necessary so that the Add() method can take care of the details of setting up 
             the child node in the tree linking it properly to its Parent and Root node, whereas a regular 
             collection is not aware of any hierarchical structure. It is used as the data type for the 
             ITreeNode&lt;&gt;.Children property and the ITreeNode&lt;&gt;.Siblings property. 
             </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="ead54978-f016-d799-c481-594b114fa4cd.htm">TreeNode<span id="LST180F90F6_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
            This class implements all of the ITreeNode&lt;&gt; interface members but is declared abstract so other 
            entity objects are required to inherit from it. Inheriting from this class gives the new class 
            all the functionality of a Tree Node. Any classes that already inherit from another class can use 
            the TreeNodeWrapper&lt;&gt; as wrapper that inherits this abstract class on behalf of the entity 
            object it is wrapping. In that way it works around the multiple inheritance problem and allows the 
            entity to participate in a tree as an ITreeNode&lt;&gt; object. 
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="4371adca-b895-8c20-8952-ccc819c0da57.htm">TreeNodeWpfViewModel<span id="LST180F90F6_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
            This class takes an ITreeNode&lt;&gt; object that is the root node of a tree and wraps each and every 
            ITreeNode&lt;&gt; object recursively down the tree with a TreeNodeViewModel&lt;&gt; object, thereby implementing 
            a ViewModel pattern for each node of the entire tree for use in an MVVM WPF application.
            </div>
              </td>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="9a4fd3fb-9f00-6398-0694-72490f82c586.htm">TreeNodeWrapper<span id="LST180F90F6_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
            This class is provided as a wrapper for entity classes that cannot directly inherit from 
            TreeNode&lt;&gt;
            </div>
              </td>
            </tr>
          </table>
        </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0">
            <img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span>
        </div>
        <div id="ID1RBSection" class="collapsibleSection">
          <table id="typeList" class="members">
            <tr>
              <th class="iconColumn">
					 
				</th>
              <th>Interface</th>
              <th>Description</th>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="ea51172a-30f4-05f8-5c96-970bf74de3af.htm">ITreeNode<span id="LST180F90F6_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
            Classes that implement this interface provide all the functionality to give classes of type T the ability 
            to function as a node in a tree structure so that tree node functionality is generic. Entity classes that 
            are organized in a tree do not have to implement the tree structure. 
            </div>
              </td>
            </tr>
            <tr data="interface; public">
              <td>
                <img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" />
              </td>
              <td>
                <a href="6fc009e8-03e6-d212-95d2-316e50f37fb3.htm">ITreeNodeProcessor<span id="LST180F90F6_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST180F90F6_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST180F90F6_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              </td>
              <td>
                <div class="summary">
            Classes that implement this interface can be used to feed into the TreeNode&lt;&gt;.ProcessTree() or 
            the TreeNode&lt;&gt;.ProcessChildren() methods.
            </div>
              </td>
            </tr>
          </table>
        </div>
      </div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>2016 Copyright - Knight Move Solutions, Inc. - All Rights Reserved</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40knightmovesolutions.com?Subject=KnightMoves.Hierarchical Help Doc">support@knightmovesolutions.com</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
<script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>