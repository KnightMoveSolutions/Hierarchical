<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>TreeNode(T) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="TreeNode%3CT%3E class" />
    <meta name="System.Keywords" content="KnightMoves.Hierarchical.TreeNode%3CT%3E class" />
    <meta name="System.Keywords" content="TreeNode%3CT%3E class, about TreeNode%3CT%3E class" />
    <meta name="System.Keywords" content="TreeNode(Of T) class" />
    <meta name="System.Keywords" content="KnightMoves.Hierarchical.TreeNode(Of T) class" />
    <meta name="System.Keywords" content="TreeNode(Of T) class, about TreeNode(Of T) class" />
    <meta name="Microsoft.Help.F1" content="KnightMoves.Hierarchical.TreeNode`1" />
    <meta name="Microsoft.Help.Id" content="T:KnightMoves.Hierarchical.TreeNode`1" />
    <meta name="Description" content="This class implements all of the ITreeNode&lt;&gt; interface members but is declared abstract so other entity objects are required to inherit from it. Inheriting from this class gives the new class all the functionality of a Tree Node." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="KnightMoves.Hierarchical" />
    <meta name="file" content="ead54978-f016-d799-c481-594b114fa4cd" />
    <meta name="guid" content="ead54978-f016-d799-c481-594b114fa4cd" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">KnightMoves.Hierarchical Help Doc<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm" title="KnightMoves.Hierarchical Help Doc" tocid="roottoc">KnightMoves.Hierarchical Help Doc</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm" title="KnightMoves.Hierarchical" tocid="a3fd85d0-83a9-c754-cf3b-fb566147ef3d">KnightMoves.Hierarchical</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ead54978-f016-d799-c481-594b114fa4cd.htm" title="TreeNode(T) Class" tocid="ead54978-f016-d799-c481-594b114fa4cd">TreeNode(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c95c1dbf-260b-3938-5307-ee4d5203d9fb.htm" title="TreeNode(T) Constructor " tocid="c95c1dbf-260b-3938-5307-ee4d5203d9fb">TreeNode(T) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d2df4bdb-2d5e-c028-9643-c420da897ad1.htm" title="TreeNode(T) Methods" tocid="d2df4bdb-2d5e-c028-9643-c420da897ad1">TreeNode(T) Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="417726ac-78c3-fe1b-287d-5ff29f81be0f.htm" title="TreeNode(T) Properties" tocid="417726ac-78c3-fe1b-287d-5ff29f81be0f">TreeNode(T) Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">TreeNode<span id="LSTD380AA95_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LSTD380AA95_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">
            This class implements all of the ITreeNode&lt;&gt; interface members but is declared abstract so other 
            entity objects are required to inherit from it. Inheriting from this class gives the new class 
            all the functionality of a Tree Node. Any classes that already inherit from another class can use 
            the TreeNodeWrapper&lt;&gt; as wrapper that inherits this abstract class on behalf of the entity 
            object it is wrapping. In that way it works around the multiple inheritance problem and allows the 
            entity to participate in a tree as an ITreeNode&lt;&gt; object. 
            </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0">
            <img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
        </div>
        <div id="ID0RBSection" class="collapsibleSection">
          <span class="nolink">System<span id="LSTD380AA95_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span>
          <br />  <span class="selflink">KnightMoves.Hierarchical<span id="LSTD380AA95_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TreeNode<span id="LSTD380AA95_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD380AA95_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br />    <a href="4371adca-b895-8c20-8952-ccc819c0da57.htm">KnightMoves.Hierarchical<span id="LSTD380AA95_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TreeNodeWpfViewModel<span id="LSTD380AA95_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD380AA95_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a><br />    <a href="9a4fd3fb-9f00-6398-0694-72490f82c586.htm">KnightMoves.Hierarchical<span id="LSTD380AA95_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TreeNodeWrapper<span id="LSTD380AA95_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD380AA95_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a><br /></div>
        <p> </p>
        <strong>Namespace:</strong> <a href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm">KnightMoves.Hierarchical</a><br /><strong>Assembly:</strong> KnightMoves.Hierarchical (in KnightMoves.Hierarchical.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">TreeNode</span>&lt;T&gt; : <span class="identifier">ITreeNode</span>&lt;T&gt;
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">ITreeNode</span>&lt;T&gt;
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>The type of the object that is being proxied into a Tree Node object (TreeNode).</dd></dl></div><p>The <span class="selflink">TreeNode<span id="LSTD380AA95_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_12?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD380AA95_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_13?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="c95c1dbf-260b-3938-5307-ee4d5203d9fb.htm">TreeNode<span id="LSTD380AA95_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTD380AA95_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Constructor setting some reasonable defaults
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7c739f1a-3189-7d04-d126-da0762a92114.htm">CreateTree</a></td><td><div class="summary">
            Accepts a regular collection of ITreeNode&lt;T&gt; objects in the form of a generic List&lt;T&gt; and builds a 
            hierarchical object model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f9f4ac9b-a818-b260-d36b-055154464bb7.htm">FindById</a></td><td><div class="summary">
            Finds and returns the ITreeNode&lt;T&gt; object where the <a href="8590aa38-86a7-ab1b-dd70-ed3cba519f00.htm">Id</a> value is equal to the <span class="parameter">nodeId</span> 
            value provided as an argument. It will search the tree recursively until it is found.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d958b6db-d1ed-19ed-2661-8a3e12246b8c.htm">IsAncestor</a></td><td><div class="summary">
            Determines if the node provided as the <span class="parameter">treeNode</span> is an ancestor of this node up the tree.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="052e5ee3-81c0-7d8e-9b58-73b612ca42aa.htm">IsDescendent</a></td><td><div class="summary">
            Determines if the node provided as the <span class="parameter">treeNode</span> is an descendant of this node down the tree.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8f305210-86ed-9d22-fb9f-19373f346013.htm">IsSibling</a></td><td><div class="summary">
            Determines if the node provided as the <span class="parameter">treeNode</span> is a sibling of this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="537f5271-05d2-16ff-4fc6-e8102d1426e4.htm">MakeChildOfUpperSibling</a></td><td><div class="summary">
            Makes this node a child of the sibling higher in the order of the Children collection of its parent. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b1be0221-0b68-5258-60ba-4cfd79654e5e.htm">MakeSiblingOfParent</a></td><td><div class="summary">
            Makes this node a sibling of its parent. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3c220a3f-8a67-c915-46ec-553a64785f45.htm">MoveDownInSiblingOrder</a></td><td><div class="summary">
            Moves this node down in the sibling order. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1d964989-4b59-9a7b-410e-5219dcbb9ae2.htm">MoveUpInSiblingOrder</a></td><td><div class="summary">
            Moves this node up in the sibling order. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4e77cf9f-8f2e-da80-6b55-ab49cb575ccc.htm">ProcessChildren(Func<span id="LSTD380AA95_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>ITreeNode<span id="LSTD380AA95_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTD380AA95_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean<span id="LSTD380AA95_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Passes each child of this node to the <span class="parameter">nodeProcessor</span> provided recursively down the
            tree. It does not include this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bbc66e69-0a9c-2f7f-026c-e5b5e864cf9c.htm">ProcessChildren(ITreeNodeProcessor<span id="LSTD380AA95_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTD380AA95_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Passes each child of this node to the <span class="parameter">nodeProcessor</span> provided recursively down the
            tree. It does not include this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="34d8925c-80b5-455d-ff38-1d36ed0efe19.htm">ProcessTree(Func<span id="LSTD380AA95_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_22?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>ITreeNode<span id="LSTD380AA95_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTD380AA95_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean<span id="LSTD380AA95_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Passes each child of this node to the <span class="parameter">nodeProcessor</span> provided recursively down the
            tree. Unlike ProcessChildren, this method will start with (include) this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2a03701c-aa96-0577-ed7b-c5f9672f1ae9.htm">ProcessTree(ITreeNodeProcessor<span id="LSTD380AA95_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTD380AA95_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD380AA95_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Passes each child of this node to the <span class="parameter">nodeProcessor</span> provided recursively down the
            tree. Unlike ProcessChildren, this method will start with (include) this node.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID5RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="88360073-bbfc-d6b3-25d0-e29bb640ef6f.htm">Children</a></td><td><div class="summary">
            The Child objects of this node in the hierarchy
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="78b861ea-6cfe-6e34-90c7-42319a2db94b.htm">DepthFromRoot</a></td><td><div class="summary">
            The number of levels in the tree where the ROOT node is Level 1. 
            Whatever contains the Root (i.e. whole tree) is Level 0. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="756fd092-758b-118c-fc5f-93a04e4fa5f3.htm">HasChildren</a></td><td><div class="summary">
            True if this node has Children false if not.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8590aa38-86a7-ab1b-dd70-ed3cba519f00.htm">Id</a></td><td><div class="summary">
            The ID of this node
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fa49a0c7-ee54-6900-aa36-adbfac4ed5c4.htm">IndentCharacter</a></td><td><div class="summary">
            The character used for indentation. It will be repeated once for every Level 
            in the tree, which is reported by the <a href="78b861ea-6cfe-6e34-90c7-42319a2db94b.htm">DepthFromRoot</a> property by
            the <a href="a8a2cb00-5783-54e2-1e06-66d67e909711.htm">IndentString</a> property.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a8a2cb00-5783-54e2-1e06-66d67e909711.htm">IndentString</a></td><td><div class="summary">
            Repeats the <a href="fa49a0c7-ee54-6900-aa36-adbfac4ed5c4.htm">IndentCharacter</a><a href="78b861ea-6cfe-6e34-90c7-42319a2db94b.htm">DepthFromRoot</a> number of 
            times to produce the indentation string for pretty display in text output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f7be090f-4809-0480-1f29-b77109910eda.htm">Parent</a></td><td><div class="summary">
            The Parent node of this node
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a1687050-4f3b-51bf-4ebf-39b89b454845.htm">ParentId</a></td><td><div class="summary">
            The <a href="8590aa38-86a7-ab1b-dd70-ed3cba519f00.htm">Id</a> of the <a href="f7be090f-4809-0480-1f29-b77109910eda.htm">Parent</a> object of this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="89618e40-5837-45b1-8841-564156034500.htm">Root</a></td><td><div class="summary">
            A reference to the Root object in the tree. All objects in the tree will have 
            the same Root.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="9451d4e3-55f1-7397-3ece-f148e754dba4.htm">Siblings</a></td><td><div class="summary">
            The other objects in the <a href="f7be090f-4809-0480-1f29-b77109910eda.htm">Parent</a> objects <a href="88360073-bbfc-d6b3-25d0-e29bb640ef6f.htm">Children</a> 
            collection. It returns all objects in that collection except for this node.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8d69ed25-6d00-f263-554f-dd3af4104a9f.htm">SortableTreePath</a></td><td><div class="summary">
            A string representation of the location of this object in the tree in the form of a "Path".
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e9624623-92df-378a-c4a4-cd53b94efd45.htm">TreeNodeId</a></td><td><div class="summary">
            A unique identifer for the node. Not required but can be useful.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">namespace</span> MyApp
{
    <span class="highlight-comment">// Just inherit from TreeNode&lt;T&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Person : TreeNode&lt;Person&gt;
    {
        <span class="highlight-comment">// Person is now able to function as a tree node</span>
        <span class="highlight-comment">// ID and ParentID are inherited properties</span>

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Name { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyFamilyTreeApp
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args)
        {
            Person grandpa = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"Grandpa"</span>, Name = <span class="highlight-literal">"Richard"</span> };
            Person dad = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"Dad"</span>, ParentId = <span class="highlight-literal">"Grandpa"</span>, Name = <span class="highlight-literal">"Richard Jr."</span> };
            Person uncle = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"UncleJohn"</span>, ParentId = <span class="highlight-literal">"Grandpa"</span>, Name = <span class="highlight-literal">"John"</span> };
            Person cousin = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"CousinAnn"</span>, ParentId = <span class="highlight-literal">"UncleJohn"</span>, Name = <span class="highlight-literal">"Ann"</span> };
            Person sister = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"SisterJane"</span>, ParentId = <span class="highlight-literal">"Dad"</span>, Name = <span class="highlight-literal">"Jane"</span> };
            Person me = <span class="highlight-keyword">new</span> Person { Id = <span class="highlight-literal">"Me"</span>, ParentId = <span class="highlight-literal">"Dad"</span>, Name = <span class="highlight-literal">"MeMyselfAndI"</span> };

            List&lt;Person&gt; familyMembers = <span class="highlight-keyword">new</span> List&lt;Person&gt;();

            <span class="highlight-comment">// Let's add them in random order just to prove a point</span>
            familyMembers.Add(sister);
            familyMembers.Add(dad);
            familyMembers.Add(uncle);
            familyMembers.Add(grandpa);
            familyMembers.Add(me);
            familyMembers.Add(cousin);

            <span class="highlight-comment">// Not linked in tree structure</span>
            Console.WriteLine(grandpa.Children.Count);      <span class="highlight-comment">// prints 0</span>
            Console.WriteLine(dad.Parent == <span class="highlight-keyword">null</span>);          <span class="highlight-comment">// prints true</span>
            Console.WriteLine(me.Parent == <span class="highlight-keyword">null</span>);           <span class="highlight-comment">// prints true</span>

            <span class="highlight-comment">// Creates tree structure automatically by using ID and ParentID of objects.</span>
            <span class="highlight-comment">// Even though the family members were added in random order to the collection </span>
            <span class="highlight-comment">// the tree is still created properly.</span>
            ITreeNode&lt;ITreeNode&lt;Person&gt;&gt; familyTree = TreeNode&lt;ITreeNode&lt;Person&gt;&gt;.CreateTree(familyMembers);

            Console.WriteLine(familyTree == grandpa);                           <span class="highlight-comment">// prints true</span>
            Console.WriteLine(familyTree.Children.Count);                       <span class="highlight-comment">// prints 2</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">0</span>] == dad);                   <span class="highlight-comment">// prints true</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">1</span>] == uncle);                 <span class="highlight-comment">// prints true</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">0</span>].Children.Count);           <span class="highlight-comment">// prints 2</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">0</span>].Children[<span class="highlight-number">0</span>] == sister);    <span class="highlight-comment">// prints true</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">0</span>].Children[<span class="highlight-number">1</span>] == me);        <span class="highlight-comment">// prints true</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">1</span>].Children.Count);           <span class="highlight-comment">// prints 1</span>
            Console.WriteLine(familyTree.Children[<span class="highlight-number">1</span>].Children[<span class="highlight-number">0</span>] == cousin);    <span class="highlight-comment">// prints true</span>

            <span class="highlight-comment">// Linked in tree now</span>
            Console.WriteLine(grandpa.Children.Count);      <span class="highlight-comment">// prints 2</span>
            Console.WriteLine(dad.Parent == grandpa);       <span class="highlight-comment">// prints true</span>
            Console.WriteLine(me.Parent == dad);            <span class="highlight-comment">// prints true</span>
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="a3fd85d0-83a9-c754-cf3b-fb566147ef3d.htm">KnightMoves.Hierarchical Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>2016 Copyright - Knight Move Solutions, Inc. - All Rights Reserved</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40knightmovesolutions.com?Subject=KnightMoves.Hierarchical Help Doc">support@knightmovesolutions.com</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>